Escaped mutants:
================

1) /var/www/html/src/Rules/AbstractRule.php:125    [M] ProtectedVisibility

--- Original
+++ New
@@ @@
      * @param string $input
      * @return string
      */
-    protected function camelToSnake(string $input) : string
+    private function camelToSnake(string $input) : string
     {
         if ($input === '') {
             return '';


2) /var/www/html/src/Rules/Common/RequiredRule.php:28    [M] UnwrapTrim

--- Original
+++ New
@@ @@
         if ($value === null) {
             return false;
         }
-        if (is_string($value) && trim($value) === '') {
+        if (is_string($value) && $value === '') {
             return false;
         }
         if (is_array($value) && count($value) === 0) {


Timed Out mutants:
==================

Skipped mutants:
================

Not Covered mutants:
====================

1) /var/www/html/src/Rules/AbstractRule.php:86    [M] NotIdentical

--- Original
+++ New
@@ @@
      */
     public function setErrorMessage(?string $message) : self
     {
-        if ($message !== null) {
+        if ($message === null) {
             $this->message = $message;
         }
         return $this;


2) /var/www/html/src/Rules/AbstractRule.php:101    [M] TrueValue

--- Original
+++ New
@@ @@
      */
     public function supportsType(string $type) : bool
     {
-        return true;
+        return false;
         // By default, rules support all types, override in specific rules
     }
     /**


3) /var/www/html/src/Rules/AbstractRule.php:111    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
      */
     public function getDocumentation() : array
     {
-        return ['name' => $this->getName(), 'description' => 'Documentation for ' . $this->getName() . ' rule', 'parameters' => [], 'examples' => []];
+        return ['description' => 'Documentation for ' . $this->getName() . ' rule', 'parameters' => [], 'examples' => []];
     }
     /**
      * Convert camelCase to snake_case


4) /var/www/html/src/Rules/AbstractRule.php:112    [M] ArrayItem

--- Original
+++ New
@@ @@
      */
     public function getDocumentation() : array
     {
-        return ['name' => $this->getName(), 'description' => 'Documentation for ' . $this->getName() . ' rule', 'parameters' => [], 'examples' => []];
+        return ['name' > $this->getName(), 'description' => 'Documentation for ' . $this->getName() . ' rule', 'parameters' => [], 'examples' => []];
     }
     /**
      * Convert camelCase to snake_case


5) /var/www/html/src/Rules/AbstractRule.php:113    [M] Concat

--- Original
+++ New
@@ @@
      */
     public function getDocumentation() : array
     {
-        return ['name' => $this->getName(), 'description' => 'Documentation for ' . $this->getName() . ' rule', 'parameters' => [], 'examples' => []];
+        return ['name' => $this->getName(), 'description' => $this->getName() . 'Documentation for ' . ' rule', 'parameters' => [], 'examples' => []];
     }
     /**
      * Convert camelCase to snake_case


6) /var/www/html/src/Rules/AbstractRule.php:113    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
      */
     public function getDocumentation() : array
     {
-        return ['name' => $this->getName(), 'description' => 'Documentation for ' . $this->getName() . ' rule', 'parameters' => [], 'examples' => []];
+        return ['name' => $this->getName(), 'description' => $this->getName() . ' rule', 'parameters' => [], 'examples' => []];
     }
     /**
      * Convert camelCase to snake_case


7) /var/www/html/src/Rules/AbstractRule.php:113    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
      */
     public function getDocumentation() : array
     {
-        return ['name' => $this->getName(), 'description' => 'Documentation for ' . $this->getName() . ' rule', 'parameters' => [], 'examples' => []];
+        return ['name' => $this->getName(), 'description' => 'Documentation for ' . ' rule', 'parameters' => [], 'examples' => []];
     }
     /**
      * Convert camelCase to snake_case


8) /var/www/html/src/Rules/AbstractRule.php:113    [M] Concat

--- Original
+++ New
@@ @@
      */
     public function getDocumentation() : array
     {
-        return ['name' => $this->getName(), 'description' => 'Documentation for ' . $this->getName() . ' rule', 'parameters' => [], 'examples' => []];
+        return ['name' => $this->getName(), 'description' => 'Documentation for ' . ' rule' . $this->getName(), 'parameters' => [], 'examples' => []];
     }
     /**
      * Convert camelCase to snake_case


9) /var/www/html/src/Rules/AbstractRule.php:113    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
      */
     public function getDocumentation() : array
     {
-        return ['name' => $this->getName(), 'description' => 'Documentation for ' . $this->getName() . ' rule', 'parameters' => [], 'examples' => []];
+        return ['name' => $this->getName(), 'description' => 'Documentation for ' . $this->getName(), 'parameters' => [], 'examples' => []];
     }
     /**
      * Convert camelCase to snake_case
