name: PHP Validator CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: zip, intl, opcache, xdebug
          coverage: xdebug
          tools: composer:v2, phpunit, phpstan, php-cs-fixer

      - name: Validate composer.json
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Check coding standards
        run: ./vendor/bin/php-cs-fixer fix --config=.php-cs-fixer.dist.php --dry-run --diff --verbose

      - name: Run static analysis
        run: ./vendor/bin/phpstan analyse --configuration=phpstan.neon

      - name: Run PHPUnit tests
        run: ./vendor/bin/phpunit --coverage-clover=coverage.xml

      - name: Run Infection tests
        run: |
          php -d memory_limit=1G ./vendor/bin/infection --threads=4 --min-msi=95 --min-covered-msi=95 --logger-github
        env:
          INFECTION_BADGE_API_KEY: ${{ secrets.INFECTION_BADGE_API_KEY }}

      - name: Run Psalm
        run: |
          if [ -f psalm.xml ]; then
            ./vendor/bin/psalm --output-format=github
          fi

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.xml
          fail_ci_if_error: false
          verbose: true

  documentation:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'  # Utiliser PHP 8.1 pour la compatibilité avec phpDocumentor
          tools: composer:v2

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Install phpDocumentor directly
        run: |
          wget https://github.com/phpDocumentor/phpDocumentor/releases/download/v3.3.1/phpDocumentor.phar
          chmod +x phpDocumentor.phar
          sudo mv phpDocumentor.phar /usr/local/bin/phpdoc

      - name: Create docs directory
        run: mkdir -p docs

      - name: Generate documentation
        run: phpdoc -d src/ -t docs/ --title="ValidatorPro" --defaultpackagename="ValidatorPro"
        continue-on-error: true  # Ne pas échouer si la documentation ne peut pas être générée

      - name: Create index if missing
        run: |
          if [ ! -f docs/index.html ]; then
            echo "<html><head><meta http-equiv='refresh' content='0; URL=classes.html'></head></html>" > docs/index.html
          fi

      - name: Deploy documentation
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
          force_orphan: true

  quality-report:
    runs-on: ubuntu-latest
    needs: build
    if: always()
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
        continue-on-error: true

      - name: Generate quality report
        run: |
          echo "# Quality Report" > quality-report.md
          echo "## Build Status" >> quality-report.md
          echo "Result: ${{ needs.build.result }}" >> quality-report.md
          echo "## Test Results" >> quality-report.md
          if [ -f artifacts/phpunit/result.txt ]; then
            echo "### PHPUnit" >> quality-report.md
            cat artifacts/phpunit/result.txt >> quality-report.md
          fi
          if [ -f artifacts/infection/result.txt ]; then
            echo "### Infection" >> quality-report.md
            cat artifacts/infection/result.txt >> quality-report.md
          fi
          if [ -f artifacts/phpstan/result.txt ]; then
            echo "### PHPStan" >> quality-report.md
            cat artifacts/phpstan/result.txt >> quality-report.md
          fi

      - name: Upload quality report
        uses: actions/upload-artifact@v4
        with:
          name: quality-report
          path: quality-report.md