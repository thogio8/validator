name: PHP Validator CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: zip, intl, opcache, xdebug
          coverage: xdebug
          tools: composer:v2, phpunit, phpstan, php-cs-fixer

      - name: Validate composer.json
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Check coding standards
        run: ./vendor/bin/php-cs-fixer fix --config=.php-cs-fixer.dist.php --dry-run --diff --verbose

      - name: Run static analysis
        run: ./vendor/bin/phpstan analyse --configuration=phpstan.neon

      - name: Run test suite
        run: ./vendor/bin/phpunit --coverage-clover=coverage.xml
        continue-on-error: true  # Temporairement autorise l'échec des tests pendant le développement

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.xml
          fail_ci_if_error: false  # Ne pas échouer si la couverture ne peut pas être téléchargée
          verbose: true

  # Job pour la création de la documentation (optionnel)
  documentation:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          tools: composer:v2, phpdocumentor

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Generate documentation
        run: phpdoc -d src/ -t docs/
        continue-on-error: true  # Ne pas échouer si la documentation ne peut pas être générée

      - name: Deploy documentation
        uses: peaceiris/actions-gh-pages@v3
        if: success()  # N'exécuter que si les étapes précédentes ont réussi
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs